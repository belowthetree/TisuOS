{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1","program":"C:\\Users\\13635\\.rustup\\toolchains\\nightly-2020-01-27-x86_64-pc-windows-gnu\\bin\\rls.exe","arguments":["--crate-name","autocfg","C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=1998a9f93b9a7f05","-C","extra-filename=-1998a9f93b9a7f05","--out-dir","g:\\github\\TisuOS\\os\\target\\rls\\debug\\deps","-L","dependency=g:\\github\\TisuOS\\os\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\13635\\.rustup/toolchains/nightly-2020-01-27-x86_64-pc-windows-gnu"],"output":"g:\\github\\TisuOS\\os\\target\\rls\\debug\\deps\\libautocfg-1998a9f93b9a7f05.rmeta"},"prelude":{"crate_id":{"name":"autocfg","disambiguator":[11620880447270883909,11542025383695426263]},"crate_root":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src","external_crates":[{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[1849374864545852573,5349322245719345172]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[7010471730404195990,16725871415062723644]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7408703177618182650,1913156331851051690]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[966319247141735224,9086331456680426478]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16081691293466837285,2156731580829962489]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2639793706049473416,17751627773647872726]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16932024086736163539,4519808987859513096]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12208506406598631523,9507604638202753372]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[5808786675114711823,10597926801392548099]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[1830141945905952303,13444644849234239254]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[16454679781834444056,3326563029179100877]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8493089974120345868,9658594215339868212]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1059415119610281946,63448692557413369]}},{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[3814615754069715267,13844930715268251747]}}],"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":14197,"line_start":1,"line_end":438,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2338,"byte_end":2343,"line_start":73,"line_end":73,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":14197,"line_start":1,"line_end":438,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":45},{"krate":0,"index":134},{"krate":0,"index":143},{"krate":0,"index":141},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" A Rust library for build scripts to automatically configure code based on\n compiler support.  Code snippets are dynamically tested to see if the `rustc`\n will accept them, rather than hard-coding specific version support.","sig":null,"attributes":[{"value":"! A Rust library for build scripts to automatically configure code based on","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! compiler support.  Code snippets are dynamically tested to see if the `rustc`","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":78,"byte_end":159,"line_start":2,"line_end":2,"column_start":1,"column_end":82}},{"value":"! will accept them, rather than hard-coding specific version support.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":160,"byte_end":231,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":232,"byte_end":235,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":236,"byte_end":239,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":240,"byte_end":252,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":253,"byte_end":256,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Add this to your `Cargo.toml`:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":257,"byte_end":291,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":292,"byte_end":295,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":296,"byte_end":307,"line_start":10,"line_end":10,"column_start":1,"column_end":12}},{"value":"! [build-dependencies]","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":308,"byte_end":332,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"! autocfg = \"1\"","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":333,"byte_end":350,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":351,"byte_end":358,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":359,"byte_end":362,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! Then use it in your `build.rs` script to detect compiler features.  For","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":363,"byte_end":438,"line_start":15,"line_end":15,"column_start":1,"column_end":76}},{"value":"! example, to test for 128-bit integer support, it might look like:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":439,"byte_end":508,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":509,"byte_end":512,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":513,"byte_end":524,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"! extern crate autocfg;","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":525,"byte_end":550,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":551,"byte_end":554,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":555,"byte_end":570,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"! #   // Normally, cargo will set `OUT_DIR` for build scripts.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":571,"byte_end":635,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"! #   std::env::set_var(\"OUT_DIR\", \"target\");","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":636,"byte_end":683,"line_start":23,"line_end":23,"column_start":1,"column_end":48}},{"value":"!     let ac = autocfg::new();","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":684,"byte_end":716,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"!     ac.emit_has_type(\"i128\");","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":717,"byte_end":750,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":751,"byte_end":754,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"!     // (optional) We don't need to rerun for anything external.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":755,"byte_end":822,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"!     autocfg::rerun_path(\"build.rs\");","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":823,"byte_end":863,"line_start":28,"line_end":28,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":864,"byte_end":869,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":870,"byte_end":877,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":878,"byte_end":881,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! If the type test succeeds, this will write a `cargo:rustc-cfg=has_i128` line","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":882,"byte_end":962,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"! for Cargo, which translates to Rust arguments `--cfg has_i128`.  Then in the","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":963,"byte_end":1043,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"! rest of your Rust code, you can add `#[cfg(has_i128)]` conditions on code that","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1044,"byte_end":1126,"line_start":34,"line_end":34,"column_start":1,"column_end":83}},{"value":"! should only be used when the compiler supports it.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1127,"byte_end":1181,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1182,"byte_end":1185,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ## Caution","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1186,"byte_end":1200,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1201,"byte_end":1204,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Many of the probing methods of `AutoCfg` document the particular template they","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1205,"byte_end":1287,"line_start":39,"line_end":39,"column_start":1,"column_end":83}},{"value":"! use, **subject to change**. The inputs are not validated to make sure they are","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1288,"byte_end":1370,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"! semantically correct for their expected use, so it's _possible_ to escape and","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1371,"byte_end":1452,"line_start":41,"line_end":41,"column_start":1,"column_end":82}},{"value":"! inject something unintended. However, such abuse is unsupported and will not","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1453,"byte_end":1533,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"! be considered when making changes to the templates.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1534,"byte_end":1589,"line_start":43,"line_end":43,"column_start":1,"column_end":56}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1591,"byte_end":1630,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1631,"byte_end":1653,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"allow(unknown_lints)","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1731,"byte_end":1755,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"allow(bare_trait_objects)","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1756,"byte_end":1785,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":1786,"byte_end":1830,"line_start":50,"line_end":50,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14348,"byte_end":14353,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" A common error type for the `autocfg` crate.\n","sig":null,"attributes":[{"value":"/ A common error type for the `autocfg` crate.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14271,"byte_end":14319,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2516,"byte_end":2523,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"AutoCfg","qualname":"::AutoCfg","value":"AutoCfg {  }","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" Helper to detect compiler features for `cfg` output in build scripts.\n","sig":null,"attributes":[{"value":"/ Helper to detect compiler features for `cfg` output in build scripts.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2407,"byte_end":2480,"line_start":81,"line_end":81,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2858,"byte_end":2862,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"emit","qualname":"::emit","value":"fn (cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes a config flag for rustc on standard out.","sig":null,"attributes":[{"value":"/ Writes a config flag for rustc on standard out.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2683,"byte_end":2734,"line_start":92,"line_end":92,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2735,"byte_end":2738,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rustc-cfg=CFG`","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2739,"byte_end":2781,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2782,"byte_end":2785,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Cargo will use this in arguments to rustc, like `--cfg CFG`.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2786,"byte_end":2850,"line_start":96,"line_end":96,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3198,"byte_end":3208,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"rerun_path","qualname":"::rerun_path","value":"fn (path: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if `path` changes.","sig":null,"attributes":[{"value":"/ Writes a line telling Cargo to rerun the build script if `path` changes.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2920,"byte_end":2996,"line_start":101,"line_end":101,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":2997,"byte_end":3000,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rerun-if-changed=PATH`","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3001,"byte_end":3051,"line_start":103,"line_end":103,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3052,"byte_end":3055,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This requires at least cargo 0.7.0, corresponding to rustc 1.6.0.  Earlier","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3056,"byte_end":3134,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ versions of cargo will simply ignore the directive.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3135,"byte_end":3190,"line_start":106,"line_end":106,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3586,"byte_end":3595,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"rerun_env","qualname":"::rerun_env","value":"fn (var: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Writes a line telling Cargo to rerun the build script if the environment\n variable `var` changes.","sig":null,"attributes":[{"value":"/ Writes a line telling Cargo to rerun the build script if the environment","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3275,"byte_end":3351,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ variable `var` changes.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3352,"byte_end":3379,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3380,"byte_end":3383,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This looks like: `cargo:rerun-if-env-changed=VAR`","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3384,"byte_end":3437,"line_start":114,"line_end":114,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3438,"byte_end":3441,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This requires at least cargo 0.21.0, corresponding to rustc 1.20.0.  Earlier","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3442,"byte_end":3522,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ versions of cargo will simply ignore the directive.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3523,"byte_end":3578,"line_start":117,"line_end":117,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3778,"byte_end":3781,"line_start":127,"line_end":127,"column_start":8,"column_end":11},"name":"new","qualname":"::new","value":"fn () -> AutoCfg","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3664,"byte_end":3700,"line_start":122,"line_end":122,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3701,"byte_end":3704,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3705,"byte_end":3717,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3718,"byte_end":3721,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Panics if `AutoCfg::new()` returns an error.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3722,"byte_end":3770,"line_start":126,"line_end":126,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4153,"byte_end":4156,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<AutoCfg>::new","value":"fn () -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3847,"byte_end":3883,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3888,"byte_end":3891,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ # Common errors","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3896,"byte_end":3915,"line_start":134,"line_end":134,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3920,"byte_end":3923,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ - `rustc` can't be executed, from `RUSTC` or in the `PATH`.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3928,"byte_end":3991,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/ - The version output from `rustc` can't be parsed.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3996,"byte_end":4050,"line_start":137,"line_end":137,"column_start":5,"column_end":59}},{"value":"/ - `OUT_DIR` is not set in the environment, or is not a writable directory.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4055,"byte_end":4133,"line_start":138,"line_end":138,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4138,"byte_end":4141,"line_start":139,"line_end":139,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4657,"byte_end":4665,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"with_dir","qualname":"<AutoCfg>::with_dir","value":"fn <T> (dir: T) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AutoCfg` instance with the specified output directory.","sig":null,"attributes":[{"value":"/ Create a new `AutoCfg` instance with the specified output directory.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4353,"byte_end":4425,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4430,"byte_end":4433,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Common errors","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4438,"byte_end":4457,"line_start":149,"line_end":149,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4462,"byte_end":4465,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ - `rustc` can't be executed, from `RUSTC` or in the `PATH`.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4470,"byte_end":4533,"line_start":151,"line_end":151,"column_start":5,"column_end":68}},{"value":"/ - The version output from `rustc` can't be parsed.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4538,"byte_end":4592,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ - `dir` is not a writable directory.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4597,"byte_end":4637,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":4642,"byte_end":4645,"line_start":154,"line_end":154,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7211,"byte_end":7230,"line_start":217,"line_end":217,"column_start":12,"column_end":31},"name":"probe_rustc_version","qualname":"<AutoCfg>::probe_rustc_version","value":"fn (&self, major: usize, minor: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether the current `rustc` reports a version greater than\n or equal to \"`major`.`minor`\".\n","sig":null,"attributes":[{"value":"/ Test whether the current `rustc` reports a version greater than","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7093,"byte_end":7160,"line_start":215,"line_end":215,"column_start":5,"column_end":72}},{"value":"/ or equal to \"`major`.`minor`\".","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7165,"byte_end":7199,"line_start":216,"line_end":216,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7490,"byte_end":7508,"line_start":223,"line_end":223,"column_start":12,"column_end":30},"name":"emit_rustc_version","qualname":"<AutoCfg>::emit_rustc_version","value":"fn (&self, major: usize, minor: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a `cfg` value of the form `rustc_major_minor`, like `rustc_1_29`,\n if the current `rustc` is at least that version.\n","sig":null,"attributes":[{"value":"/ Sets a `cfg` value of the form `rustc_major_minor`, like `rustc_1_29`,","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7347,"byte_end":7421,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ if the current `rustc` is at least that version.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":7426,"byte_end":7478,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9086,"byte_end":9105,"line_start":272,"line_end":272,"column_start":12,"column_end":31},"name":"probe_sysroot_crate","qualname":"<AutoCfg>::probe_sysroot_crate","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given sysroot crate can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given sysroot crate can be used.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":8867,"byte_end":8921,"line_start":265,"line_end":265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":8926,"byte_end":8929,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":8934,"byte_end":8999,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9004,"byte_end":9007,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9012,"byte_end":9025,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ extern crate CRATE as probe;","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9030,"byte_end":9062,"line_start":270,"line_end":270,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9067,"byte_end":9074,"line_start":271,"line_end":271,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9370,"byte_end":9388,"line_start":278,"line_end":278,"column_start":12,"column_end":30},"name":"emit_sysroot_crate","qualname":"<AutoCfg>::emit_sysroot_crate","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_CRATE` if `probe_sysroot_crate` returns true.\n","sig":null,"attributes":[{"value":"/ Emits a config value `has_CRATE` if `probe_sysroot_crate` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9283,"byte_end":9358,"line_start":277,"line_end":277,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9722,"byte_end":9732,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"probe_path","qualname":"<AutoCfg>::probe_path","value":"fn (&self, path: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given path can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given path can be used.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9527,"byte_end":9572,"line_start":284,"line_end":284,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9577,"byte_end":9580,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9585,"byte_end":9650,"line_start":286,"line_end":286,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9655,"byte_end":9658,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9663,"byte_end":9676,"line_start":288,"line_end":288,"column_start":5,"column_end":18}},{"value":"/ pub use PATH;","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9681,"byte_end":9698,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9703,"byte_end":9710,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10041,"byte_end":10054,"line_start":299,"line_end":299,"column_start":12,"column_end":25},"name":"emit_has_path","qualname":"<AutoCfg>::emit_has_path","value":"fn (&self, path: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_PATH` if `probe_path` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_PATH` if `probe_path` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9839,"byte_end":9904,"line_start":295,"line_end":295,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9909,"byte_end":9912,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the `path` will be replaced with","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9917,"byte_end":9986,"line_start":297,"line_end":297,"column_start":5,"column_end":74}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":9991,"byte_end":10029,"line_start":298,"line_end":298,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10257,"byte_end":10270,"line_start":306,"line_end":306,"column_start":12,"column_end":25},"name":"emit_path_cfg","qualname":"<AutoCfg>::emit_path_cfg","value":"fn (&self, path: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_path` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_path` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10184,"byte_end":10245,"line_start":305,"line_end":305,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10598,"byte_end":10609,"line_start":319,"line_end":319,"column_start":12,"column_end":23},"name":"probe_trait","qualname":"<AutoCfg>::probe_trait","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given trait can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given trait can be used.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10382,"byte_end":10428,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10433,"byte_end":10436,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10441,"byte_end":10506,"line_start":314,"line_end":314,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10511,"byte_end":10514,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10519,"byte_end":10532,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/ pub trait Probe: TRAIT + Sized {}","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10537,"byte_end":10574,"line_start":317,"line_end":317,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10579,"byte_end":10586,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10960,"byte_end":10974,"line_start":328,"line_end":328,"column_start":12,"column_end":26},"name":"emit_has_trait","qualname":"<AutoCfg>::emit_has_trait","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TRAIT` if `probe_trait` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_TRAIT` if `probe_trait` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10750,"byte_end":10817,"line_start":324,"line_end":324,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10822,"byte_end":10825,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the trait `name` will be replaced with","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10830,"byte_end":10905,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":10910,"byte_end":10948,"line_start":327,"line_end":327,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11179,"byte_end":11193,"line_start":335,"line_end":335,"column_start":12,"column_end":26},"name":"emit_trait_cfg","qualname":"<AutoCfg>::emit_trait_cfg","value":"fn (&self, name: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_trait` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_trait` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11105,"byte_end":11167,"line_start":334,"line_end":334,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11510,"byte_end":11520,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"probe_type","qualname":"<AutoCfg>::probe_type","value":"fn (&self, name: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given type can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given type can be used.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11306,"byte_end":11351,"line_start":341,"line_end":341,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11356,"byte_end":11359,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11364,"byte_end":11429,"line_start":343,"line_end":343,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11434,"byte_end":11437,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11442,"byte_end":11455,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/ pub type Probe = TYPE;","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11460,"byte_end":11486,"line_start":346,"line_end":346,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11491,"byte_end":11498,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11856,"byte_end":11869,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"emit_has_type","qualname":"<AutoCfg>::emit_has_type","value":"fn (&self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits a config value `has_TYPE` if `probe_type` returns true.","sig":null,"attributes":[{"value":"/ Emits a config value `has_TYPE` if `probe_type` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11649,"byte_end":11714,"line_start":353,"line_end":353,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11719,"byte_end":11722,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Any non-identifier characters in the type `name` will be replaced with","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11727,"byte_end":11801,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ `_` in the generated config value.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11806,"byte_end":11844,"line_start":356,"line_end":356,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12072,"byte_end":12085,"line_start":364,"line_end":364,"column_start":12,"column_end":25},"name":"emit_type_cfg","qualname":"<AutoCfg>::emit_type_cfg","value":"fn (&self, name: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_type` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_type` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":11999,"byte_end":12060,"line_start":363,"line_end":363,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12417,"byte_end":12433,"line_start":377,"line_end":377,"column_start":12,"column_end":28},"name":"probe_expression","qualname":"<AutoCfg>::probe_expression","value":"fn (&self, expr: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given expression can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given expression can be used.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12197,"byte_end":12248,"line_start":370,"line_end":370,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12253,"byte_end":12256,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12261,"byte_end":12326,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12331,"byte_end":12334,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12339,"byte_end":12352,"line_start":374,"line_end":374,"column_start":5,"column_end":18}},{"value":"/ pub fn probe() { let _ = EXPR; }","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12357,"byte_end":12393,"line_start":375,"line_end":375,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12398,"byte_end":12405,"line_start":376,"line_end":376,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12653,"byte_end":12672,"line_start":383,"line_end":383,"column_start":12,"column_end":31},"name":"emit_expression_cfg","qualname":"<AutoCfg>::emit_expression_cfg","value":"fn (&self, expr: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_expression` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_expression` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12574,"byte_end":12641,"line_start":382,"line_end":382,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":13022,"byte_end":13036,"line_start":396,"line_end":396,"column_start":12,"column_end":26},"name":"probe_constant","qualname":"<AutoCfg>::probe_constant","value":"fn (&self, expr: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given constant expression can be used.","sig":null,"attributes":[{"value":"/ Tests whether the given constant expression can be used.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12790,"byte_end":12850,"line_start":389,"line_end":389,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12855,"byte_end":12858,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The test code is subject to change, but currently looks like:","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12863,"byte_end":12928,"line_start":391,"line_end":391,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12933,"byte_end":12936,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12941,"byte_end":12954,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/ pub const PROBE: () = ((), EXPR).0;","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":12959,"byte_end":12998,"line_start":394,"line_end":394,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":13003,"byte_end":13010,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":13255,"byte_end":13272,"line_start":402,"line_end":402,"column_start":12,"column_end":29},"name":"emit_constant_cfg","qualname":"<AutoCfg>::emit_constant_cfg","value":"fn (&self, expr: &str, cfg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Emits the given `cfg` value if `probe_constant` returns true.\n","sig":null,"attributes":[{"value":"/ Emits the given `cfg` value if `probe_constant` returns true.","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":13178,"byte_end":13243,"line_start":401,"line_end":401,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14402,"byte_end":14407,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14770,"byte_end":14775,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\version.rs","byte_start":15901,"byte_end":15908,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3833,"byte_end":3840,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14402,"byte_end":14407,"line_start":13,"line_end":13,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":1596}},{"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\error.rs","byte_start":14770,"byte_end":14775,"line_start":28,"line_end":28,"column_start":23,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":5928}},{"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\version.rs","byte_start":15901,"byte_end":15908,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\13635\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\autocfg-1.0.1\\src\\lib.rs","byte_start":3833,"byte_end":3840,"line_start":131,"line_end":131,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}}]}
var searchIndex={};
searchIndex["tisuos"] = {"doc":"","i":[[5,"eh_personality","tisuos","",null,[[]]],[5,"panic","","",null,[[["panicinfo"]]]],[5,"abort","","",null,[[]]],[5,"kernel_init","","",null,[[]]],[5,"kernel_start","","",null,[[]]],[5,"test_disk","","",null,[[]]],[5,"test_global_allocator","","",null,[[]]],[0,"uart","","uart.rs UART 可以直接传输用户的输入输出 作为前期输出调试的主要手段，必须优先实现",null,null],[3,"Uart","tisuos::uart","",null,null],[17,"UART_ADDR","","",null,null],[17,"LSR_OFFSET","","",null,null],[11,"new","","",0,[[],["self"]]],[11,"init","","初始化 UART 主要包括： lcr：每次传输的数据位数 fcr：先进先出 激活",0,[[["self"]]]],[11,"get","","获取键盘输入 从 MMIO 对应地址获取输入",0,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"put","","输出 通过 MMIO 的方式",0,[[["self"],["u8"]]]],[0,"cpu","tisuos","",null,null],[5,"get_hartid","tisuos::cpu","",null,[[],["usize"]]],[5,"read_sstatus","","",null,[[],["usize"]]],[5,"write_sstatus","","",null,[[["usize"]]]],[5,"write_satp","","",null,[[["usize"]]]],[5,"read_satp","","",null,[[],["usize"]]],[5,"write_stvec","","",null,[[["usize"]]]],[5,"read_stvec","","",null,[[],["usize"]]],[5,"read_mscratch","","",null,[[],["usize"]]],[5,"write_scratch","","",null,[[["usize"]]]],[5,"satp_fence_asid","","",null,[[["usize"]]]],[0,"interrupt","tisuos","中断",null,null],[0,"trap","tisuos::interrupt","Trap 中断管理部分，包括环境结构，各类中断处理 2020年11月 zg",null,null],[3,"Environment","tisuos::interrupt::trap","保存需要恢复的环境",null,null],[12,"regs","","",1,null],[12,"fregs","","",1,null],[12,"satp","","",1,null],[12,"epc","","",1,null],[4,"Register","","",null,null],[13,"RA","","",2,null],[13,"A0","","",2,null],[13,"A1","","",2,null],[13,"A2","","",2,null],[13,"A3","","",2,null],[5,"init","","",null,[[]]],[5,"m_trap","","",null,[[["environment"],["usize"]],["usize"]]],[7,"ENVS","","",null,null],[11,"val","","",2,[[],["usize"]]],[11,"new","","",1,[[],["self"]]],[11,"init","","",1,[[["self"],["usize"]]]],[11,"copy","","",1,[[["self"],["environment"]]]],[0,"timer","tisuos::interrupt","timer 控制 timer 触发 2020年12月12日 zg",null,null],[5,"set_next_interrupt","tisuos::interrupt::timer","设置下一个时间中断的间隔，单位是秒",null,[[["usize"]]]],[5,"get_time","","获取当前计时器的计数",null,[[],["u64"]]],[5,"set_next_timer","","设置下一个 timer 触发，使用默认 INTERVAL",null,[[]]],[5,"get_timecmp","","",null,[[],["u64"]]],[7,"FREQUENCY","","",null,null],[7,"MTIMECMP","","",null,null],[7,"MTIME","","",null,null],[7,"INTERVAL","","",null,null],[0,"syscall","tisuos::interrupt","System call 系统调用转到这里处理 2020年12月18日 zg",null,null],[5,"handler","tisuos::interrupt::syscall","",null,[[["environment"]],["usize"]]],[5,"exec","","",null,[[["usize"],["bool"]]]],[0,"memory","tisuos","内存管理 内存管理基于页表实现 * page 是基础，将内存划分为页 * global_allocator 是堆分配…",null,null],[0,"global_allocator","tisuos::memory","global allocator 用于管理全局的内存分配，分离内核、用户的内存分配 分为内核、用户两个链表管理…",null,null],[3,"Memory","tisuos::memory::global_allocator","Memory 内存管理中最重要的结构 将申请的页表分割成 2 的幂次大小，记录数量和起始地址…",null,null],[12,"physic_base","","",3,null],[12,"total_cnt","","",3,null],[12,"free_cnt","","",3,null],[12,"use_cnt","","",3,null],[12,"size","","",3,null],[12,"next","","",3,null],[12,"bitlen","","",3,null],[12,"search_idx","","",3,null],[12,"bitmap","","",3,null],[12,"page","","",3,null],[3,"OSGlobalAlloc","","容器内存管理 实现 RUST 容器的内存分配 trait 所有内存在内核部分分配",null,null],[5,"align","","将某个数向上取 2^n",null,[[["usize"]],["usize"]]],[5,"init","","初始化",null,[[]]],[5,"alloc_kernel","","alloc kernel 在内核页表申请内存，会自动清空内存",null,[[["usize"]]]],[5,"alloc_user","","alloc user 在用户页表申请内存，同上",null,[[["usize"]]]],[5,"free_user","","",null,[[]]],[5,"free_kernel","","",null,[[]]],[5,"alloc_error","","",null,[[["layout"]]]],[7,"KERNEL_MEMORY","","",null,null],[7,"USER_MEMORY","","",null,null],[7,"KERNEL_HEAP_START","","",null,null],[7,"KERNEL_HEAP_NUM_PAGE","","",null,null],[7,"MEMORY_BLOCK_A_LITTLE_BIG","","",null,null],[7,"MEMORY_BLOCK_A_TOO_BIG","","",null,null],[7,"GA","","",null,null],[11,"new","","new 负责根据传入 size 申请足够的页表作为堆的分配空间 它会新建一个 Memory…",3,[[["usize"]],["option"]]],[11,"alloc","","分配以固定大小的块为单位，每次分配需要对齐大小为 2^n",3,[[["usize"]]]],[11,"free","","根据地址释放，遍历每个结构体，先查看是否包含该地址，然后释放 如果所有结构体都不包含，则报错",3,[[]]],[11,"get_used_block_num","","获取某个大小的非空块数量",3,[[["usize"]],["usize"]]],[11,"get_free_block_num","","获取某个大小的空块数量",3,[[["usize"]],["usize"]]],[11,"free_bitmap","","根据地址找到对应的元素然后释放",3,[[["self"]]]],[11,"is_contain","","元素是否包含此地址",3,[[["self"]],["bool"]]],[11,"decide_page_num","","决定某个大小需要的页数",3,[[["usize"]],["usize"]]],[11,"init","","初始化变量",3,[[["usize"],["page"],["self"]]]],[11,"init_bitmap","","初始化位图，仅当结构体放置在堆所在的页表时调用",3,[[["self"]]]],[11,"write_bitmap","","",3,[[["self"],["usize"]]]],[11,"append","","",3,[[["self"]]]],[11,"delete","","删除给定的元素，仅从链表中删除，不做其它操作",3,[[]]],[11,"find_first_greater","","找到第一个大于等于 size 的对齐大小的前驱，如果没有则返回最后一个元素",3,[[["usize"]]]],[11,"find_first_contain","","找到第一个对齐大小相等且能够容纳 size 的元素前驱，找不到则返回空",3,[[["usize"]]]],[11,"can_contain","","",3,[[["self"]],["bool"]]],[11,"is_bit_alloc","","",3,[[["self"],["usize"]],["bool"]]],[11,"alloc_bitmap","","",3,[[["self"]]]],[11,"print","","打印内核、用户链表大小及使用情况",3,[[]]],[0,"page","tisuos::memory","Page 以页面为基本单位管理内存 2020年11月 zg",null,null],[3,"Page","tisuos::memory::page","",null,null],[12,"flag","","",4,null],[4,"PageBit","","",null,null],[13,"Empty","","",5,null],[13,"Taken","","",5,null],[13,"End","","",5,null],[13,"User","","",5,null],[13,"Kernel","","",5,null],[13,"Write","","",5,null],[13,"Read","","",5,null],[13,"Reserved","","",5,null],[5,"init","","初始化 页表结构体放在 KERNEL_HEAP 起始处，连同 MMIO 区域在内作为保留区域 可分配页表在这之后…",null,[[]]],[5,"alloc_user_page","","申请给定数量的页表，标记为用户 不负责清零",null,[[["usize"]]]],[5,"alloc_kernel_page","","申请内核用的页 分配前清零",null,[[["usize"]]]],[5,"free_page","","释放给定地址对应的页表",null,[[]]],[5,"print_page_alloc","","打印页表分配信息 用于调试",null,[[]]],[5,"clear_page","","清理页面 在分配前进行清零操作，速度较慢",null,[[["usize"]]]],[7,"TEXT_START","","",null,null],[7,"TEXT_END","","",null,null],[7,"DATA_START","","",null,null],[7,"DATA_END","","",null,null],[7,"RODATA_START","","",null,null],[7,"RODATA_END","","",null,null],[7,"BSS_START","","",null,null],[7,"BSS_END","","",null,null],[7,"KERNEL_STACK_START","","",null,null],[7,"KERNEL_STACK_END","","",null,null],[7,"HEAP_START","","",null,null],[7,"HEAP_SIZE","","",null,null],[7,"MEMORY_START","","",null,null],[7,"MEMORY_END","","",null,null],[7,"PAGES","","",null,null],[7,"TOTAL_PAGE","","",null,null],[7,"NUM_RESERVE","","",null,null],[7,"KERNEL_HEAP_START","","",null,null],[7,"KERNEL_PAGE_STRUCT_START","","",null,null],[7,"USER_HEAP_START","","",null,null],[7,"USER_PAGE_NUM","","",null,null],[7,"USER_PAGE_STRUCT_START","","",null,null],[17,"PAGE_SIZE","","",null,null],[17,"KERNEL_PAGE_NUM","","",null,null],[11,"val","","",5,[[],["u8"]]],[11,"new","","",4,[[["pagebit"]],["self"]]],[11,"free","","",4,[[["self"]]]],[11,"take","","",4,[[["self"]]]],[11,"reserved","","",4,[[["self"]]]],[11,"end","","",4,[[["self"]]]],[11,"is_free","","",4,[[["self"]],["bool"]]],[11,"is_reserved","","",4,[[["self"]],["bool"]]],[11,"is_taken","","",4,[[["self"]],["bool"]]],[11,"is_end","","",4,[[["self"]],["bool"]]],[11,"set_flag","","",4,[[["self"],["u8"]]]],[11,"set_user_read_write","","",4,[[["self"]]]],[11,"set_kernel_read_write","","",4,[[["self"]]]],[11,"is_kernel","","",4,[[["self"]],["bool"]]],[11,"is_user","","",4,[[["self"]],["bool"]]],[0,"user_allocator","tisuos::memory","user allocator 用于处理用户的堆内存申请 采用链式的方法将同一个进程的内存连接起来…",null,null],[3,"MemoryList","tisuos::memory::user_allocator","链接同一个进程的所有堆内存",null,null],[12,"next","","",6,null],[12,"phy_addr","","",6,null],[11,"new","","根据大小新建一个，结构体本身存放在内核堆内存里，用户所需在用户内存中申请",6,[[["usize"],["bool"]]]],[11,"free","","从这个节点开始释放，将后续所有节点全部释放，不保证前面的节点被释放",6,[[["self"],["bool"]]]],[11,"alloc","","申请新的堆块，自动将结构体拼接至末尾",6,[[["self"],["usize"],["bool"]]]],[0,"page_table","tisuos::memory","page table 负责管理 satp 及对应的页表项，页表模式暂定为 RV39 >…",null,null],[3,"SATP","tisuos::memory::page_table","SATP",null,null],[12,"flag","","",7,null],[3,"PTE","","PTE 页表项的 PPN 给出下一级页表地址或者实际的物理地址 以一个页表为单位，所以给出的地址需要先右移 12 位",null,null],[12,"flag","","",8,null],[3,"PageTable","","PageTable Rv39 页表，本身占据一个页表（默认4KB）的大小 分为三级，页表地址必须以一个页表的大小对齐",null,null],[12,"entry","","",9,null],[4,"PageBit","","PageBit 页表属性，与 page.rs 中的 PageBit 无关",null,null],[13,"Valid","","",10,null],[13,"Read","","",10,null],[13,"Write","","",10,null],[13,"Excute","","",10,null],[13,"User","","",10,null],[13,"Global","","",10,null],[13,"Access","","",10,null],[13,"Dirty","","",10,null],[5,"make_satp","","",null,[[["usize"]],["usize"]]],[5,"init","","",null,[[]]],[5,"map_kernel_area","","将内核代码部分进行映射 因为进程返回调用了内核中的代码",null,[[["bool"],["pagetable"]]]],[7,"MODE","","",null,null],[11,"new","","",7,[[["usize"]],["self"]]],[11,"from","","",7,[[["usize"]],["self"]]],[11,"get_ppn_addr","","",7,[[["self"]],["usize"]]],[11,"val","","",7,[[["self"]],["usize"]]],[11,"get_page_table","","",7,[[["self"]]]],[11,"is_map","","",7,[[["self"]],["bool"]]],[11,"create_page_table","","",7,[[["self"]]]],[11,"free_page_table","","",7,[[["self"]]]],[11,"val","","",10,[[],["u64"]]],[11,"new","","",8,[[],["self"]]],[11,"is_valid","","",8,[[["self"]],["bool"]]],[11,"set_node_ppn","","",8,[[["self"],["u64"]]]],[11,"set_leaf_ppn","","",8,[[["self"],["u64"]]]],[11,"set_user","","",8,[[["self"]]]],[11,"get_ppn","","",8,[[["self"]],["usize"]]],[11,"set_flag","","",8,[[["self"],["u64"]]]],[11,"is_leaf","","",8,[[["self"]],["bool"]]],[11,"set_valid","","",8,[[["self"]]]],[11,"new","","",9,[[]]],[11,"map_user","","",9,[[["self"],["usize"]]]],[11,"map_kernel","","",9,[[["self"],["usize"]]]],[11,"map_kernel_data","","",9,[[["self"],["usize"]]]],[11,"map_user_data","","",9,[[["self"],["usize"]]]],[11,"map_user_code","","",9,[[["self"],["usize"]]]],[11,"map","","",9,[[["self"],["usize"],["u64"]]]],[11,"unmap","","",9,[[["self"],["usize"]]]],[11,"free","","",9,[[["self"]]]],[11,"print","","",9,[[["self"]]]],[0,"block","tisuos::memory","Block 块内存管理 使用 Rust 的 Box…",null,null],[3,"Block","tisuos::memory::block","",null,null],[12,"addr","","",11,null],[12,"size","","",11,null],[5,"new_block","","",null,[[["usize"]],[["box",["block"]],["block"]]]],[11,"get","","获取内存中的某个值",11,[[["self"],["usize"]],[["option",["u8"]],["u8"]]]],[11,"set","","",11,[[["self"],["usize"],["u8"]]]],[11,"copy","","",11,[[["self"]]]],[0,"process","tisuos","进程管理 管理进程，每一个核心进程队列的首元素默认为正在执行的进程 进程的调度按顺序进行，暂未添加优先级等…",null,null],[3,"Process","tisuos::process","进程信息结构体 保存环境、栈堆信息（预计增加唤醒时间、优先级） pages 属于进程占用的物理页",null,null],[12,"env","","",12,null],[12,"stack_top","","",12,null],[12,"heap_list","","",12,null],[12,"state","","",12,null],[12,"hartid","","",12,null],[12,"pid","","",12,null],[12,"is_kernel","","",12,null],[4,"ProcessState","","ProcessState 进程目前分为三种状态：Waiting、Sleeping、Running 每个核心只有一个…",null,null],[13,"Running","","",13,null],[13,"Waiting","","",13,null],[13,"Sleeping","","",13,null],[5,"init","","",null,[[]]],[5,"start_init_process","","机器模式（中断）调用部分，严禁用户、内核权限下调用",null,[[]]],[5,"schedule","","进程调度 采用轮换制分时，仅供机器模式使用",null,[[["environment"],["usize"]]]],[5,"wake_up","","唤醒进程 从 Sleeping 进入 Waiting 状态，仅供机器模式使用",null,[[["u32"]]]],[5,"create_and_add","","",null,[[["usize"],["bool"]]]],[5,"add_process_machine","","添加进程到调度队列",null,[[["process"]]]],[5,"delete_current_process","","删除当前核心正在运行的进程，根据 hartid 和 state 判断",null,[[]]],[5,"save_current","","保存当前进程的环境，根据 hartid、ProcessState 查找",null,[[["environment"]]]],[5,"switch_to_next","","切换下一个进程，进程必须为 Waiting 状态，会记录当前执行的 hartid 如果没有其它等待进程，会执行原来的进程",null,[[["usize"]]]],[5,"create_process","","对外功能接口，内核权限下可用",null,[[["usize"],["bool"]],[["option",["process"]],["process"]]]],[5,"fadai_process","","发呆进程，什么也不做",null,[[]]],[5,"switch_user_process","","",null,null],[5,"switch_kernel_process","","",null,null],[5,"process_exit","","",null,null],[5,"make_syscall","","",null,null],[7,"TMP_ENV","","",null,null],[7,"PID_CNT","","",null,null],[7,"STACK_PAGE_NUM","","",null,null],[7,"PROCESS_LIST","","",null,null],[7,"HEAP_SIZE","","",null,null],[7,"PROCESS_NUM_MAX","","",null,null],[7,"PROCESS_LIST_LOCK","","",null,null],[11,"new","","新建一个进程 内核或用户，传入的是虚拟地址，初始仅映射单页的代码页及全部栈页，堆页暂时不映射",12,[[["usize"],["bool"]],["option"]]],[11,"from_satp","","利用现有的 satp 创建进程 默认已经映射代码页，不再映射代码",12,[[["usize"],["bool"]],["option"]]],[11,"map_code","","提供给内核功能，用于映射指定地址代码",12,[[["self"],["usize"]]]],[11,"map_data","","",12,[[["self"],["usize"]]]],[11,"get_pid","","",12,[[["self"]],["u32"]]],[11,"sleep","","",12,[[["self"]]]],[0,"plic","tisuos","PLIC 管理时间中断以及外部设备中断，这里只负责 1 ~ 10 的外部中断 外部设备（包括块设备、uart等）通过…",null,null],[5,"init","tisuos::plic","",null,[[]]],[5,"complete","","",null,[[["u32"]]]],[5,"claim","","",null,[[],[["u32"],["option",["u32"]]]]],[5,"pending","","",null,[[],[["u32"],["option",["u32"]]]]],[5,"set_threshold","","",null,[[["usize"]]]],[5,"enable","","",null,[[["usize"]]]],[5,"set_priority","","",null,[[["usize"]]]],[5,"handler","","",null,[[]]],[7,"ENABLE","","",null,null],[7,"PRIORITY","","",null,null],[7,"PENDING","","",null,null],[7,"THRESHOLD","","",null,null],[7,"CLAIM","","",null,null],[7,"COMPLETE","","",null,null],[0,"virtio","tisuos","虚拟 IO 设备 包括块设备、键盘、鼠标、GPU 等设备的控制 2020年11月 zg",null,null],[0,"device","tisuos::virtio","Device 虚拟IO设备管理 开机扫描 0x1000_1000 到 0x1000_8000…",null,null],[3,"Queue","tisuos::virtio::device","",null,null],[12,"desc","","",14,null],[12,"avail","","",14,null],[12,"padding0","","",14,null],[12,"used","","",14,null],[3,"Descriptor","","",null,null],[12,"addr","","",15,null],[12,"len","","",15,null],[12,"flags","","",15,null],[12,"next","","",15,null],[3,"Request","","Request waiter pid 用于异步读写，记录等待的进程 lock 用于同步读写",null,null],[12,"header","","",16,null],[12,"data","","",16,null],[12,"status","","",16,null],[12,"waiter_pid","","",16,null],[12,"lock","","",16,null],[3,"UsedElem","","",null,null],[12,"id","","",17,null],[12,"len","","",17,null],[3,"Used","","",null,null],[12,"flags","","",18,null],[12,"idx","","",18,null],[12,"ring","","",18,null],[12,"event","","",18,null],[3,"Available","","",null,null],[12,"flags","","",19,null],[12,"idx","","",19,null],[12,"ring","","",19,null],[12,"event","","",19,null],[3,"Header","","",null,null],[12,"blktype","","",20,null],[12,"reserved","","",20,null],[12,"sector","","",20,null],[3,"Data","","",null,null],[12,"data","","",21,null],[3,"Status","","",null,null],[12,"status","","",22,null],[4,"DeviceType","","",null,null],[13,"None","","",23,null],[13,"Network","","",23,null],[13,"Block","","",23,null],[13,"Console","","",23,null],[13,"Entropy","","",23,null],[13,"Gpu","","",23,null],[13,"Input","","",23,null],[13,"Memory","","",23,null],[4,"Offset","","",null,null],[13,"MagicValue","","",24,null],[13,"Version","","",24,null],[13,"DeviceId","","",24,null],[13,"VendorId","","",24,null],[13,"HostFeatures","","",24,null],[13,"HostFeaturesSel","","",24,null],[13,"GuestFeatures","","",24,null],[13,"GuestFeaturesSel","","",24,null],[13,"GuestPageSize","","",24,null],[13,"QueueSel","","",24,null],[13,"QueueNumMax","","",24,null],[13,"QueueNum","","",24,null],[13,"QueueAlign","","",24,null],[13,"QueuePfn","","",24,null],[13,"QueueNotify","","",24,null],[13,"InterruptStatus","","",24,null],[13,"InterruptAck","","",24,null],[13,"Status","","",24,null],[13,"Config","","",24,null],[4,"StatusField","","",null,null],[13,"Acknowledge","","",25,null],[13,"Driver","","",25,null],[13,"Failed","","",25,null],[13,"FeaturesOk","","",25,null],[13,"DriverOk","","",25,null],[13,"DeviceNeedsReset","","",25,null],[5,"init","","",null,[[]]],[5,"interrupt_handler","","",null,[[["usize"]]]],[7,"VIRTIO_START_ADDR","","",null,null],[7,"VIRTIO_END_ADDR","","",null,null],[7,"VIRTIO_STEP_SIZE","","",null,null],[7,"VIRTIO_VAL","","",null,null],[7,"DEVICE","","",null,null],[17,"VIRTIO_DESC_F_NEXT","","",null,null],[17,"VIRTIO_DESC_F_WRITE","","",null,null],[17,"VIRTIO_DESC_F_INDIRECT","","",null,null],[17,"VIRTIO_AVAIL_F_NO_INTERRUPT","","",null,null],[17,"VIRTIO_USED_F_NO_NOTIFY","","",null,null],[17,"VIRTIO_BLK_T_IN","","",null,null],[17,"VIRTIO_BLK_T_OUT","","",null,null],[17,"VIRTIO_BLK_T_FLUSH","","",null,null],[17,"VIRTIO_BLK_T_DISCARD","","",null,null],[17,"VIRTIO_BLK_T_WRITE_ZEROES","","",null,null],[17,"VIRTIO_BLK_F_RO","","",null,null],[17,"VIRTIO_RING_SIZE","","",null,null],[17,"VIRTIO_F_RING_EVENT_IDX","","",null,null],[11,"scale32","","",24,[[],["usize"]]],[11,"val","","",24,[[],["usize"]]],[11,"val32","","",25,[[],["u32"]]],[0,"block_device","tisuos::virtio","Block device 管理块设备，开机扫描所有块设备并记录 2020年12月16日 zg",null,null],[3,"BlockDevice","tisuos::virtio::block_device","BlockDevice 记录此设备所在的针脚等信息",null,null],[12,"pin_idx","","",26,null],[12,"queue_idx","","",26,null],[12,"used_idx","","",26,null],[12,"queue","","",26,null],[12,"ptr","","",26,null],[5,"init","","",null,[[]]],[5,"init_block","","",null,[[["usize"]],["bool"]]],[5,"async_write","","异步读写使用进程实现",null,[[["usize"],["u32"]]]],[5,"async_read","","",null,[[["usize"],["u32"]]]],[5,"sync_write","","同步读写仅使用同步锁实现",null,[[["usize"],["u32"]]]],[5,"sync_read","","",null,[[["usize"],["u32"]]]],[5,"interrupt_handler","","",null,[[["usize"]]]],[7,"BLOCKS","","",null,null],[11,"new","","",26,[[["usize"]],["self"]]],[11,"add_idx","","",26,[[["self"]],["usize"]]],[11,"next_idx","","",26,[[["self"]],["u16"]]],[11,"operation","","块设备的操作依赖于请求结构体（Request） Request…",26,[[["u32"],["usize"],["self"],["bool"]]]],[11,"interrupt_handler","","块设备完成数据传输后会在 Queue 的 used 中将 idx 加一",26,[[["self"]]]],[0,"gpu_device","tisuos::virtio","GPU GPU 控制接口 2020年12月28日 zg",null,null],[3,"ResourceFlush","tisuos::virtio::gpu_device","",null,null],[12,"header","","",27,null],[12,"rect","","",27,null],[12,"resource_id","","",27,null],[12,"padding","","",27,null],[3,"ControllHeader","","",null,null],[12,"ctype","","",28,null],[12,"flag","","",28,null],[12,"fence_idx","","",28,null],[12,"ctx_id","","",28,null],[12,"padding","","",28,null],[3,"Scanout","","",null,null],[12,"header","","",29,null],[12,"rect","","",29,null],[12,"scanout_id","","",29,null],[12,"resource_id","","",29,null],[3,"Create2D","","",null,null],[12,"header","","",30,null],[12,"resource_idx","","",30,null],[12,"format","","",30,null],[12,"width","","",30,null],[12,"height","","",30,null],[3,"TransferToHost2d","","",null,null],[12,"header","","",31,null],[12,"rect","","",31,null],[12,"offset","","",31,null],[12,"resource_id","","",31,null],[12,"padding","","",31,null],[3,"AttachBacking","","",null,null],[12,"header","","",32,null],[12,"resource_id","","",32,null],[12,"entries","","",32,null],[3,"MemEntry","","",null,null],[12,"addr","","",33,null],[12,"length","","",33,null],[12,"padding","","",33,null],[3,"GPU","","",null,null],[12,"queue","","",34,null],[12,"device_idx","","",34,null],[12,"ptr","","",34,null],[12,"queue_idx","","",34,null],[12,"used_idx","","",34,null],[12,"frame_buffer","","",34,null],[12,"width","","",34,null],[12,"height","","",34,null],[3,"Rect","","",null,null],[12,"x1","","",35,null],[12,"y1","","",35,null],[12,"x2","","",35,null],[12,"y2","","",35,null],[3,"Pixel","","",null,null],[12,"r","","",36,null],[12,"g","","",36,null],[12,"b","","",36,null],[12,"a","","",36,null],[4,"PixelFormat","","",null,null],[13,"B8G8R8A8","","",37,null],[13,"B8G8R8X8","","",37,null],[13,"A8R8G8B8","","",37,null],[13,"X8R8G8B8","","",37,null],[13,"R8G8B8A8","","",37,null],[13,"X8B8G8R8","","",37,null],[13,"A8B8G8R8","","",37,null],[13,"R8G8B8X8","","",37,null],[4,"ControllType","","",null,null],[13,"GetDisplayInfo","","",38,null],[13,"ResourceCreate2d","","",38,null],[13,"ResourceUref","","",38,null],[13,"SetScanout","","",38,null],[13,"ResourceFlush","","",38,null],[13,"TransferToHost2d","","",38,null],[13,"ResourceAttachBacking","","",38,null],[13,"ResourceDetachBacking","","",38,null],[13,"GetCapsetInfo","","",38,null],[13,"GetCapset","","",38,null],[13,"GetEdid","","",38,null],[13,"UpdateCursor","","",38,null],[13,"MoveCursor","","",38,null],[13,"RespOkNoData","","",38,null],[13,"RespOkDisplayInfo","","",38,null],[13,"RespOkCapsetInfo","","",38,null],[13,"RespOkCapset","","",38,null],[13,"RespOkEdid","","",38,null],[13,"RespErrUnspec","","",38,null],[13,"RespErrOutOfMemory","","",38,null],[13,"RespErrInvalidScanoutId","","",38,null],[13,"RespErrInvalidResourceId","","",38,null],[13,"RespErrInvalidContextId","","",38,null],[13,"RespErrInvalidParameter","","",38,null],[5,"init","","",null,[[]]],[5,"init_gpu","","",null,[[["usize"]],["bool"]]],[5,"pending","","",null,[[["usize"]]]],[5,"draw_rect_override","","绘图api",null,[[["rect"],["usize"],["box"]]]],[5,"draw_rect_blend","","",null,[[["rect"],["usize"],["box"]]]],[5,"flush","","",null,[[["usize"]]]],[5,"reset","","",null,[[["usize"]]]],[7,"DEVICE","","",null,null],[17,"WIDTH","","",null,null],[17,"HEIGHT","","",null,null],[11,"new","","",34,[[["usize"]],["self"]]],[11,"reset","","清空屏幕 rgba（10，10，10，255）",34,[[["self"]]]],[11,"flush","","刷新 resouce 里的区域",34,[[["self"],["rect"],["usize"]]]],[11,"transfer","","将 source 对应区域传输给 GPU",34,[[["self"],["rect"],["usize"]]]],[11,"set_scanout","","将 source 和 scanout 中的某个区域绑定",34,[[["rect"],["usize"],["self"]]]],[11,"create_resouce_id","","创建一个 source，设定好宽、高",34,[[["self"],["usize"]]]],[11,"attach","","将 source 与某块内存绑定",34,[[["self"],["u32"]]]],[11,"draw_rect_override","","",34,[[["self"],["rect"],["box"]]]],[11,"draw_rect_blend","","",34,[[["self"],["rect"],["box"]]]],[11,"run","","发送 QueueNotify",34,[[["self"]]]],[11,"entry","","",34,[[["self"]]]],[11,"add_ring","","",34,[[["self"],["usize"]]]],[11,"add_desc","","",34,[[["u32"],["u16"],["self"],["u64"]]]],[11,"fill_rect","","",34,[[["pixel"],["self"],["usize"]]]],[11,"new","","",30,[[["usize"]]]],[11,"new","","",28,[[]]],[11,"new","","",31,[[["rect"],["usize"]]]],[11,"new","","",32,[[["u32"]]]],[11,"new","","",29,[[["rect"],["usize"]]]],[11,"new","","",27,[[["rect"],["usize"]]]],[11,"red","","",36,[[],["self"]]],[11,"green","","",36,[[],["self"]]],[11,"blue","","",36,[[],["self"]]],[11,"yellow","","",36,[[],["self"]]],[11,"grey","","",36,[[],["self"]]],[11,"white","","",36,[[],["self"]]],[0,"input","tisuos::virtio","",null,null],[0,"input_device","tisuos::virtio::input","Input Device 处理输入设备接口 除了 select 和 subsel 都不能动，size 为 0…",null,null],[3,"InputABSInfo","tisuos::virtio::input::input_device","",null,null],[12,"min","","",39,null],[12,"max","","",39,null],[12,"fuzz","","",39,null],[12,"flat","","",39,null],[12,"res","","",39,null],[3,"InputDevids","","",null,null],[12,"bustype","","",40,null],[12,"vendor","","",40,null],[12,"product","","",40,null],[12,"version","","",40,null],[3,"InputConfig","","",null,null],[12,"select","","",41,null],[12,"subsel","","",41,null],[12,"size","","",41,null],[12,"reserved","","",41,null],[12,"u","","",41,null],[3,"InputEvent","","",null,null],[12,"etype","","",42,null],[12,"code","","",42,null],[12,"value","","",42,null],[3,"InputDevice","","",null,null],[12,"pin_idx","","",43,null],[12,"queue_idx","","",43,null],[12,"event_used_idx","","",43,null],[12,"status_used_idx","","",43,null],[12,"buffer","","",43,null],[12,"event_queue","","",43,null],[12,"status_queue","","",43,null],[12,"ptr","","",43,null],[19,"T","","",null,null],[12,"s","","",44,null],[12,"bitmap","","",44,null],[12,"info","","",44,null],[12,"ids","","",44,null],[4,"EventType","","",null,null],[13,"Syn","","",45,null],[13,"Key","","",45,null],[13,"Rel","","",45,null],[13,"Abs","","",45,null],[13,"Msc","","",45,null],[13,"Sw","","",45,null],[13,"Led","","",45,null],[13,"Snd","","",45,null],[13,"Rep","","",45,null],[13,"Ff","","",45,null],[13,"Pwr","","",45,null],[13,"FfStatus","","",45,null],[13,"Max","","",45,null],[5,"init","","",null,[[]]],[5,"setup_input_device","","",null,[[["usize"]],["bool"]]],[5,"interrupt_handler","","",null,[[["usize"]]]],[7,"ABS_EVENTS","","",null,null],[7,"KEY_EVENTS","","",null,null],[7,"INPUT_DEVICE","","",null,null],[17,"VIRTIO_INPUT_CFG_UNSET","","",null,null],[17,"VIRTIO_INPUT_CFG_ID_NAME","","",null,null],[17,"VIRTIO_INPUT_CFG_ID_SERIAL","","",null,null],[17,"VIRTIO_INPUT_CFG_ID_DEVIDS","","",null,null],[17,"VIRTIO_INPUT_CFG_PROP_BITS","","",null,null],[17,"VIRTIO_INPUT_CFG_EV_BITS","","",null,null],[17,"VIRTIO_INPUT_CFG_ABS_INFO","","",null,null],[17,"EVENT_SIZE","","",null,null],[17,"EVENT_BUFFER_ELEMENTS","","",null,null],[11,"new","","",43,[[["usize"]],["self"]]],[11,"fill_event","","",43,[[["self"],["usize"]]]],[11,"pending","","",43,[[["self"]]]],[0,"buffer","tisuos::virtio","缓冲区 因为磁盘读写太慢，采用缓存的方式，内核所有磁盘操作先经过这层封装 2020年12月31日 zg",null,null],[3,"Buffer","tisuos::virtio::buffer","",null,null],[12,"cnt","","",46,null],[12,"block_idx","","",46,null],[12,"idx","","",46,null],[12,"size","","",46,null],[12,"addr","","",46,null],[5,"init","","",null,[[]]],[5,"sync_read_buffer","","",null,[[["usize"],["u32"]]]],[5,"sync_write_buffer","","",null,[[["usize"],["u32"]]]],[5,"new_buffer","","",null,[[["usize"]]]],[5,"find_buffer","","",null,[[["usize"]],[["buffer"],["option",["buffer"]]]]],[7,"COUNTER","","",null,null],[7,"CACHE","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"CACHE_SIZE","","",null,null],[11,"new","","",46,[[["usize"]],["self"]]],[11,"copy_buffer","","",46,[[["usize"],["self"]]]],[11,"is_contain","","",46,[[["self"],["usize"]],["bool"]]],[11,"copy_len","","",46,[[["self"],["usize"]],["usize"]]],[11,"refresh","","",46,[[["self"],["usize"]]]],[0,"sync","tisuos","同步锁 同步锁，用于磁盘和进程 2020年11月 zg",null,null],[3,"MultiMutex","tisuos::sync","多重锁 多重锁，允许一个核心多次上锁，这是为了解决单重锁在多重函数中反复上锁的需求",null,null],[12,"state","","",47,null],[12,"cnt","","",47,null],[12,"hartid","","",47,null],[3,"Mutex","","单重锁 单次锁，仅仅针对简单的同步要求",null,null],[12,"state","","",48,null],[4,"MutexState","","",null,null],[13,"Unlock","","",49,null],[13,"Lock","","",49,null],[11,"new","","",47,[[],["self"]]],[11,"lock","","",47,[[["self"],["u32"]]]],[11,"unlock","","",47,[[["self"]]]],[11,"lock_state","","",47,[[["self"]],["bool"]]],[11,"new","","",48,[[],["self"]]],[11,"lock","","",48,[[["self"]]]],[11,"unlock","","",48,[[["self"]]]],[11,"lock_state","","",48,[[["self"]],["bool"]]],[0,"filesystem","tisuos","文件系统 目前只实现了 FAT32 的读取和执行",null,null],[0,"file_manager","tisuos::filesystem","file manager 提供根目录、磁盘信息获取 是上层文件抽象与底层文件系统的中继",null,null],[5,"init","tisuos::filesystem::file_manager","功能接口",null,[[]]],[5,"get_next_cluster","","",null,[[["usize"]],[["option",["usize"]],["usize"]]]],[5,"get_cluster_offset","","",null,[[["usize"]],[["option",["usize"]],["usize"]]]],[5,"get_file_tree","","获取目录的文件树 @ block_idx : 磁盘号 @ cluster : 传入目录的簇号",null,[[["usize"]],[["filetree"],["option",["filetree"]]]]],[5,"get_root","","获取磁盘根目录 默认使用 fat32",null,[[["usize"]],[["filetree"],["option",["filetree"]]]]],[5,"get_mgr","","",null,[[["usize"]],[["fatmanger"],["option",["fatmanger"]]]]],[5,"get_fat32_root_file_tree","","以 fat32 格式读取磁盘根目录",null,[[["usize"]],[["filetree"],["option",["filetree"]]]]],[5,"get_fat_info","","获取磁盘的 fat32 信息",null,[[["usize"]],[["box",["block"]],["block"]]]],[7,"FATMANAGER","","",null,null],[0,"fat32","tisuos::filesystem","FAT32 用于分析 FAT32 文件系统 2020年12月18日 zg",null,null],[3,"FATInfo","tisuos::filesystem::fat32","FATInfo 处理 FAT32 格式的磁盘信息",null,null],[12,"jump1","","",50,null],[12,"j2","","",50,null],[12,"j3","","",50,null],[12,"oem","","",50,null],[12,"bpb","","",50,null],[12,"ext","","",50,null],[3,"FATManger","","FATManger 初始化获得一个磁盘的 FAT32 信息，提供目录项及文件的读取",null,null],[12,"fat_addr","","",51,null],[12,"fat_total_size","","",51,null],[12,"fat_num","","",51,null],[12,"max_cluster","","",51,null],[12,"cluster_size","","",51,null],[12,"root_dir_cluster_addr","","",51,null],[12,"cluster_start_addr","","",51,null],[12,"buffer","","",51,null],[12,"read_addr","","",51,null],[12,"block_idx","","",51,null],[12,"bpb","","",51,null],[3,"FATItem","","",null,null],[12,"item","","",52,null],[3,"FATShortDirItem","","",null,null],[12,"filename","","",53,null],[12,"ext_name","","",53,null],[12,"attr","","",53,null],[12,"reserved","","",53,null],[12,"create_time_ext","","",53,null],[12,"create_time","","",53,null],[12,"create_date","","",53,null],[12,"last_access_date","","",53,null],[12,"start_cluster_high","","",53,null],[12,"last_change_time","","",53,null],[12,"last_change_date","","",53,null],[12,"start_cluster_low","","",53,null],[12,"file_length","","",53,null],[3,"BPB","","",null,null],[12,"bytes_per_sector","","",54,null],[12,"sector_per_cluster","","",54,null],[12,"reserved_sector","","",54,null],[12,"fat_num","","",54,null],[12,"root_entry","","",54,null],[12,"total_sector1","","",54,null],[12,"desc","","",54,null],[12,"sector_per_fat_16","","",54,null],[12,"sector_per_track","","",54,null],[12,"track_num","","",54,null],[12,"hidden_sector","","",54,null],[12,"total_sector2","","",54,null],[12,"fat_sector_num","","",54,null],[3,"Extend","","",null,null],[12,"ext_flag","","",55,null],[12,"filesystem_version","","",55,null],[12,"root_cluster_start","","",55,null],[12,"filesystem_info","","",55,null],[12,"backup_boot_sector","","",55,null],[12,"reserved1","","",55,null],[12,"reserved2","","",55,null],[4,"Attribute","","",null,null],[13,"Empty","","",56,null],[13,"ReadOnly","","",56,null],[13,"Hidden","","",56,null],[13,"System","","",56,null],[13,"VolumeLabel","","",56,null],[13,"SubDir","","",56,null],[13,"Archive","","",56,null],[13,"LongName","","",56,null],[17,"BUFFER_SIZE","","",null,null],[11,"get_fat_addr","","",50,[[["self"]],["usize"]]],[11,"get_fat_size","","",50,[[["self"]],["usize"]]],[11,"get_directory_addr","","",50,[[["self"]],["usize"]]],[11,"get_fat_item","","",50,[[["self"],["usize"]],[["option",["fatitem"]],["fatitem"]]]],[11,"new","","",51,[[["fatinfo"],["usize"]],["self"]]],[11,"get_fat_item","","",51,[[["self"],["usize"]],[["option",["fatitem"]],["fatitem"]]]],[11,"get_root_dir_files","","获取根目录目录项",51,[[["self"]],[["vec",["fatshortdiritem"]],["option",["vec"]]]]],[11,"get_sub_dir_item","","获取目录项",51,[[["self"],["usize"]],[["vec",["fatshortdiritem"]],["option",["vec"]]]]],[11,"get_file_cluster","","",51,[[["self"],["usize"]],[["option",["box"]],["box",["block"]]]]],[11,"get_total_size","","获取硬盘总大小（单位 字节）",51,[[["self"]],["usize"]]],[11,"get_used_size","","",51,[[["self"]],["usize"]]],[11,"get_cluster","","",51,[[["self"],["usize"]],[["option",["box"]],["box",["block"]]]]],[11,"get_dir_item","","根据目录簇号获取里面的目录项",51,[[["self"],["vec"]],[["vec",["fatshortdiritem"]],["option",["vec"]]]]],[11,"get_all_cluster","","根据起始簇号获取整个簇链",51,[[["self"],["usize"]],[["vec",["usize"]],["option",["vec"]]]]],[11,"is_free","","",52,[[["self"]],["bool"]]],[11,"is_reserved","","",52,[[["self"]],["bool"]]],[11,"is_end","","",52,[[["self"]],["bool"]]],[11,"is_bad","","",52,[[["self"]],["bool"]]],[11,"get_next_item_num","","",52,[[["self"]],["u32"]]],[11,"get_file_cluster","","",52,[[["self"]],["u32"]]],[11,"has_next","","",52,[[["self"]],["bool"]]],[11,"is_item","","",52,[[["self"]],["bool"]]],[11,"is_file","","",53,[[["self"]],["bool"]]],[11,"is_dir","","",53,[[["self"]],["bool"]]],[11,"get_cluster","","",53,[[["self"]],["u32"]]],[11,"is_empty","","",53,[[["self"]],["bool"]]],[11,"get_filename","","",53,[[["self"]],["string"]]],[11,"get_ext","","",53,[[["self"]],["string"]]],[11,"val","","",56,[[["self"]],["u8"]]],[0,"elf","tisuos::filesystem","ELF 提供 ELF64 文件的操作接口 2020年12月22日 zg",null,null],[3,"ELF","tisuos::filesystem::elf","",null,null],[12,"identity","","",57,null],[12,"identity2","","",57,null],[12,"etype","","",57,null],[12,"machine","","",57,null],[12,"version","","",57,null],[12,"entry","","",57,null],[12,"program_header_offset","","",57,null],[12,"section_header_offset","","",57,null],[12,"flags","","",57,null],[12,"this_header_size","","",57,null],[12,"program_header_size","","",57,null],[12,"program_header_num","","",57,null],[12,"section_header_size","","",57,null],[12,"section_header_num","","",57,null],[12,"section_str_table_index","","",57,null],[3,"SectionHeader","","",null,null],[12,"section_name","","",58,null],[12,"stype","","",58,null],[12,"flag","","",58,null],[12,"virtual_addr","","",58,null],[12,"offset_in_file","","",58,null],[12,"section_size","","",58,null],[12,"link_section","","",58,null],[12,"info","","",58,null],[12,"address_align","","",58,null],[12,"entry_size","","",58,null],[3,"ProgramHeader","","",null,null],[12,"ptype","","",59,null],[12,"flags","","",59,null],[12,"offset_in_file","","",59,null],[12,"virtual_addr","","",59,null],[12,"physic_addr","","",59,null],[12,"segment_size_in_file","","",59,null],[12,"segment_size_in_memory","","",59,null],[12,"align","","",59,null],[4,"PType","","",null,null],[13,"Null","","",60,null],[13,"Load","","",60,null],[13,"Dynamic","","",60,null],[13,"Interp","","",60,null],[13,"Note","","",60,null],[4,"Etype","","",null,null],[13,"None","","",61,null],[13,"Rel","","",61,null],[13,"Exec","","",61,null],[13,"Dynamic","","",61,null],[13,"Core","","",61,null],[13,"LoPro","","",61,null],[13,"HiPro","","",61,null],[4,"Machine","","",null,null],[13,"None","","",62,null],[13,"M32","","",62,null],[13,"Sparc","","",62,null],[13,"Intel","","",62,null],[13,"Moto68","","",62,null],[13,"Moto88","","",62,null],[13,"Intel8086","","",62,null],[13,"Mips","","",62,null],[13,"Mips4","","",62,null],[5,"load_elf","","load elf 加载 ELF 文件并创建进程执行，暂时使用",null,[[["file"]],["option"]]],[17,"MAGIC","","",null,null],[11,"is_elf","","",57,[[["self"]],["bool"]]],[11,"list","","",57,[[["self"]]]],[11,"get_section_header_addr","","",57,[[["self"]],["usize"]]],[11,"get_program_header_addr","","",57,[[["self"]],["usize"]]],[11,"get_program_header_size","","",57,[[["self"]],["usize"]]],[11,"get_section_size","","",57,[[["self"]],["usize"]]],[11,"list","","",58,[[["self"]]]],[11,"list","","",59,[[["self"]]]],[11,"is_loadable","","",59,[[["self"]],["bool"]]],[11,"is_null","","",59,[[["self"]],["bool"]]],[11,"val","","",60,[[],["u32"]]],[0,"image","tisuos::filesystem","",null,null],[0,"bmp","tisuos::filesystem::image","BMP 提供 BMP 格式图片操控接口 2020年12月31日 zg",null,null],[3,"BMP","tisuos::filesystem::image::bmp","",null,null],[12,"btype","","",63,null],[12,"size","","",63,null],[12,"reserved","","",63,null],[12,"data_offset","","",63,null],[12,"info_size","","",63,null],[12,"width","","",63,null],[12,"height","","",63,null],[12,"plane","","",63,null],[12,"bitcnt","","",63,null],[12,"compression_type","","",63,null],[12,"image_size","","",63,null],[12,"pixel_x","","",63,null],[12,"pixel_y","","",63,null],[12,"cnt_used","","",63,null],[12,"important_cnt","","",63,null],[4,"CompressType","","",null,null],[13,"RGB","","",64,null],[5,"generate_image","","",null,[[["file"]],[["option",["image"]],["image"]]]],[17,"UNIT_SIZE","","",null,null],[11,"is_bmp","","",63,[[["self"]],["bool"]]],[11,"is_compressed","","",64,[[["self"]],["bool"]]],[0,"image","tisuos::filesystem::image","Image 所有图片格式最终转换成此接口 2020年12月31日 zg",null,null],[3,"Image","tisuos::filesystem::image::image","",null,null],[12,"width","","",65,null],[12,"height","","",65,null],[12,"format","","",65,null],[12,"data","","",65,null],[4,"Format","","",null,null],[13,"RGB","","",66,null],[11,"new","","",65,[[["format"],["usize"]],["self"]]],[11,"get","","",65,[[["self"],["usize"]],[["pixel"],["option",["pixel"]]]]],[11,"set","","",65,[[["pixel"],["self"],["usize"]]]],[0,"file_tree","tisuos::filesystem","文件树 文件树只是对于目录结构的描述，其中的 Item 只是描述目录中的一个项，具体的文件操作应该由 File 执行",null,null],[3,"FileTree","tisuos::filesystem::file_tree","文件树 将磁盘文件、目录当作一个树形构造，一次提供一层（一个目录）的切片…",null,null],[12,"name","","",67,null],[12,"items","","",67,null],[12,"start_cluster","","",67,null],[12,"parent_cluster","","",67,null],[12,"block_idx","","",67,null],[3,"TreeItem","","",null,null],[12,"filename","","",68,null],[12,"name","","",68,null],[12,"extension","","",68,null],[12,"start_cluster","","",68,null],[12,"block_idx","","",68,null],[12,"size","","",68,null],[12,"attr","","",68,null],[11,"new","","",67,[[["treeitem"],["usize"],["string"],["vec",["treeitem"]]],["self"]]],[11,"list_file","","显示功能，待删除",67,[[["self"]]]],[11,"list_dir","","",67,[[["self"]]]],[11,"get_sub_directory","","",67,[[["string"],["self"]],[["filetree"],["option",["filetree"]]]]],[11,"get_parent_directory","","",67,[[["self"]],[["filetree"],["option",["filetree"]]]]],[11,"get_fat32_root_file_tree","","获取当前文件树所在磁盘的 fat 文件系统根目录",67,[[["self"]],[["filetree"],["option",["filetree"]]]]],[11,"get_total_size","","获取磁盘总大小",67,[[["self"]],["usize"]]],[11,"get_used_size","","磁盘占用大小",67,[[["self"]],["usize"]]],[11,"get_file","","",67,[[["self"],["string"]],[["file"],["option",["file"]]]]],[11,"get_item","","获取当前目录项的引用",67,[[["self"],["string"]],[["option",["treeitem"]],["treeitem"]]]],[11,"new","","",68,[[["usize"],["string"],["u8"]],["self"]]],[11,"is_file","","",68,[[["self"]],["bool"]]],[11,"is_dir","","",68,[[["self"]],["bool"]]],[11,"get_file","","",68,[[["self"]],[["file"],["option",["file"]]]]],[0,"file","tisuos::filesystem","文件 文件结构以及存储方式,提供两种存储方式 * 链表式存储 * 连续大文件存储",null,null],[3,"File","tisuos::filesystem::file","文件链 磁盘中的文件可以选择以文件链的形式储存在内存中，可以更加高效地利用内存…",null,null],[12,"filename","","",69,null],[12,"start_cluster","","",69,null],[12,"block_idx","","",69,null],[12,"open_cnt","","",69,null],[12,"size","","",69,null],[12,"flag","","",69,null],[4,"OpenFlag","","",null,null],[13,"Close","","",70,null],[13,"Read","","",70,null],[13,"Write","","",70,null],[5,"get_file_record","","",null,[[["usize"]],[["file"],["option",["file"]]]]],[5,"update_file_record","","更新全局文件信息 如果不存在，则加入",null,[[["file"]]]],[5,"open_file","","",null,[[["file"],["u8"]],["result"]]],[5,"close_file","","",null,[[["file"]]]],[7,"OPENED_FILES","","全局文件信息记录 所有被打开的文件会被记录在这",null,null],[7,"FILE_LOCK","","",null,null],[11,"new","","创建新文件信息 只能通过文件树的项创建",69,[[["treeitem"]],["option"]]],[11,"open","","打开文件 同一个文件只能被打开一次",69,[[["self"],["u8"]],["result"]]],[11,"close","","关闭文件 文件使用计数减一",69,[[["self"]]]],[11,"read","","",69,[[["self"],["usize"]],[["option",["box"]],["box",["block"]]]]],[11,"is_close","","",69,[[["self"]],["bool"]]],[11,"is_write","","",69,[[["self"]],["bool"]]],[11,"is_read","","",69,[[["self"]],["bool"]]],[11,"val","","",70,[[],["u8"]]],[0,"interact","tisuos","交互 简单的命令交互，便于调试",null,null],[0,"shell","tisuos::interact","Shell 用于接受用户输入、与用户沟通，提供基本功能，用于测试内核 默认生成一个…",null,null],[3,"Shell","tisuos::interact::shell","Shell file tree 一个 Shell 对应一个文件树，默认无目录，需要通过 cddisk…",null,null],[12,"file_tree","","",71,null],[12,"input_list","","",71,null],[5,"init","","",null,[[]]],[5,"update","","Update 遍历所有 Shell 并调用它们的 update 函数 会作为独立进程挂载，为了避免出现问题同时节省…",null,[[]]],[5,"from_string","","",null,[[["string"]],["usize"]]],[5,"output","","",null,[[["u8"]]]],[7,"SHELL","","所有的 Shell 都保存在这",null,null],[11,"new","","",71,[[],["self"]]],[11,"handle_cmd","","",71,[[["self"],["string"]]]],[11,"update","","由 Update 进程调用",71,[[["self"]]]],[11,"handle","","",71,[[["self"],["char"]]]],[11,"enter_directory","","",71,[[["self"],["string"]]]],[0,"input","tisuos::interact","Input 处理全局的输入 2020年12月20日 zg",null,null],[3,"Input","tisuos::interact::input","",null,null],[12,"idx","","",72,null],[12,"cnt","","",72,null],[12,"list","","",72,null],[5,"init","","",null,[[]]],[5,"handler","","",null,[[]]],[7,"INPUT","","",null,null],[7,"HANDLER","","",null,null],[17,"CHAR_LEN","","",null,null],[11,"new","","",72,[[],["self"]]],[11,"handle_input","","",72,[[["self"]]]],[11,"add","","",72,[[["self"],["char"]]]],[11,"get_front","","",72,[[["self"]],["char"]]],[0,"graphic","tisuos","图形接口 基于 GPU 接口实现，待完善",null,null],[0,"transform","tisuos::graphic","变换 固定变换接口，预计可以提供 3D 的变换 2020年12月29日 zg",null,null],[8,"ElemTranform","tisuos::graphic::transform","",null,null],[10,"set_position","","",73,[[["self"],["u32"]]]],[0,"implement","tisuos::graphic","elment 接口实现 默认使用第一个 GPU 设备 2020年12月29日 zg",null,null],[5,"flush_gpu","tisuos::graphic::implement","调用 GPU 刷新显示",null,[[]]],[17,"DEVICE_ID","","",null,null],[0,"element","tisuos::graphic","Element 基本绘图元素 2020年12月30日 zg",null,null],[3,"Element","tisuos::graphic::element","Element 基本显示元素，x、y 为左上角顶点",null,null],[12,"x","","",74,null],[12,"y","","",74,null],[12,"width","","",74,null],[12,"height","","",74,null],[12,"content","","",74,null],[8,"Draw","","",null,null],[10,"draw_area","","",75,[[["self"]]]],[0,"display","tisuos::graphic","Display 显示模式，考虑作为图形显示前的加工层 2020年12月30日 zg",null,null],[8,"Shadow","tisuos::graphic::display","Shadow 显示边缘阴影",null,null],[0,"mask","tisuos::graphic","Mask 遮罩，用来显示特定区域 2020年12月30日 zg",null,null],[8,"Circle","tisuos::graphic::mask","圆形遮罩",null,null],[10,"mask","","将非圆形区域标记为透明",76,[[["self"],["usize"]]]],[10,"mask_inverse","","",76,[[["self"],["usize"]]]],[0,"desktop","tisuos","桌面 桌面可视化，开发中",null,null],[0,"desktop","tisuos::desktop","桌面 维护一个桌面实例，底层依赖于 Graphic 2020年12月30日 zg",null,null],[3,"Desktop","tisuos::desktop::desktop","",null,null],[12,"background","","",77,null],[12,"dock","","",77,null],[12,"terminal","","",77,null],[12,"window","","",77,null],[3,"Window","","",null,null],[3,"Bounds","","Bounds 边缘框，用来检测鼠标的相交信息等",null,null],[12,"offset_x","","",78,null],[12,"offset_y","","",78,null],[12,"width","","",78,null],[12,"height","","",78,null],[3,"Terminal","","",null,null],[12,"head_bar","","",79,null],[3,"HeadBar","","",null,null],[12,"background","","",80,null],[12,"close_button","","",80,null],[12,"width","","",80,null],[12,"height","","",80,null],[12,"button_width","","",80,null],[12,"close_button_offset","","",80,null],[3,"Dock","","",null,null],[0,"implement","tisuos::desktop","desktop 文件函数实现 2020年12月30日 zg",null,null],[11,"new","tisuos::desktop::desktop","",77,[[],["self"]]],[11,"run","","",77,[[]]],[11,"new","","",81,[[],["self"]]],[11,"new","","",82,[[],["self"]]],[11,"new","","",79,[[],["self"]]],[11,"new_default","","",80,[[],["self"]]],[11,"draw","","",80,[[["self"]]]],[0,"controll","tisuos::desktop","",null,null],[0,"button","tisuos::desktop::controll","Button 按钮控件 2020年12月30日 zg",null,null],[3,"Button","tisuos::desktop::controll::button","按钮应该维护一个图标来源，可以是图也可以是代码生成的颜色样式 虽然也具有坐标、深度等属性，但是与 Graphic…",null,null],[12,"background","","",83,null],[12,"x","","",83,null],[12,"y","","",83,null],[12,"width","","",83,null],[12,"height","","",83,null],[12,"depth","","",83,null],[11,"new","","",83,[[["u32"],["colorstyle"]],["self"]]],[11,"new_default","","",83,[[],["self"]]],[11,"resize","","",83,[[["self"],["u32"]]]],[11,"set_color","","",83,[[["pixel"],["self"]]]],[11,"draw","","",83,[[["self"]]]],[0,"style","tisuos::desktop::controll","",null,null],[0,"style","tisuos::desktop::controll::style","Style 控件样式的支持 2020年12月30日 zg",null,null],[3,"Style","tisuos::desktop::controll::style::style","",null,null],[12,"color_style","","",84,null],[12,"color","","",84,null],[12,"texture","","",84,null],[12,"element","","",84,null],[4,"ColorStyle","","",null,null],[13,"Texture","","",85,null],[13,"SolidColor","","",85,null],[17,"DEFAULT_COLOR","","",null,null],[11,"new","","",84,[[["u32"],["colorstyle"]],["self"]]],[11,"new_default","","",84,[[],["self"]]],[11,"get_color","","",84,[[["u32"],["self"]],["element"]]],[11,"resize","","",84,[[["self"],["u32"]]]],[11,"set_color","","",84,[[["pixel"],["self"]]]],[11,"draw_area","","",84,[[["self"]]]],[11,"set_texture","","",84,[[["self"],["image"]]]],[0,"desktop_trait","tisuos::desktop","桌面接口 要求桌面元素全体支持，接口与底层 Graphic 紧密结合 2020年12月30日 zg",null,null],[8,"Transform","tisuos::desktop::desktop_trait","",null,null],[10,"set_position","","",86,[[["self"],["u32"]]]],[10,"maximum","","",86,[[["self"]]]],[10,"minimum","","",86,[[["self"]]]],[0,"libs","tisuos","工具库",null,null],[0,"str","tisuos::libs","字符工具库（内核用） 提供数字字符转换功能 2020年12月31日 zg",null,null],[5,"from_u64","tisuos::libs::str","",null,[[["u64"]],["string"]]],[5,"from_u16","","",null,[[["u16"]],["string"]]],[14,"print","tisuos","",null,null],[14,"println","","",null,null],[11,"from","tisuos::uart","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","tisuos::interrupt::trap","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","tisuos::memory::global_allocator","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","tisuos::memory::page","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","tisuos::memory::user_allocator","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","tisuos::memory::page_table","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","tisuos::memory::block","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","tisuos::process","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"from","tisuos::virtio::device","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","tisuos::virtio::block_device","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","tisuos::virtio::gpu_device","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","tisuos::virtio::input::input_device","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"from","tisuos::virtio::buffer","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","tisuos::sync","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"from","tisuos::filesystem::fat32","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"from","tisuos::filesystem::elf","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","tisuos::filesystem::image::bmp","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"from","tisuos::filesystem::image::image","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","tisuos::filesystem::file_tree","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","tisuos::filesystem::file","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","tisuos::interact::shell","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","tisuos::interact::input","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","tisuos::graphic::element","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","tisuos::desktop::desktop","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","tisuos::desktop::controll::button","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","tisuos::desktop::controll::style::style","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"set_position","tisuos::graphic::element","",74,[[["self"],["u32"]]]],[11,"draw_area","","",74,[[["self"]]]],[11,"mask","","",74,[[["self"],["usize"]]]],[11,"mask_inverse","","",74,[[["self"],["usize"]]]],[11,"set_position","tisuos::desktop::controll::button","",83,[[["self"],["u32"]]]],[11,"maximum","","",83,[[["self"]]]],[11,"minimum","","",83,[[["self"]]]],[11,"fmt","tisuos::virtio::device","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","tisuos::virtio::gpu_device","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","tisuos::filesystem::elf","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","tisuos::filesystem::image::bmp","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"eq","tisuos::process","",13,[[["self"]],["bool"]]],[11,"eq","tisuos::filesystem::fat32","",56,[[["attribute"],["self"]],["bool"]]],[11,"eq","tisuos::desktop::controll::style::style","",85,[[["colorstyle"],["self"]],["bool"]]],[11,"drop","tisuos::memory::block","",11,[[["self"]]]],[11,"drop","tisuos::process","",12,[[["self"]]]],[11,"write_str","tisuos::uart","",0,[[["str"],["self"]],[["result",["error"]],["error"]]]],[11,"clone","tisuos::interrupt::trap","",1,[[["self"]],["environment"]]],[11,"clone","tisuos::memory::global_allocator","",3,[[["self"]],["memory"]]],[11,"clone","tisuos::memory::page","",5,[[["self"]],["pagebit"]]],[11,"clone","","",4,[[["self"]],["page"]]],[11,"clone","tisuos::memory::page_table","",8,[[["self"]],["pte"]]],[11,"clone","tisuos::process","",13,[[["self"]],["processstate"]]],[11,"clone","tisuos::virtio::device","",23,[[["self"]],["devicetype"]]],[11,"clone","tisuos::virtio::gpu_device","",35,[[["self"]],["rect"]]],[11,"clone","","",36,[[["self"]],["pixel"]]],[11,"clone","tisuos::virtio::input::input_device","",42,[[["self"]],["inputevent"]]],[11,"clone","","",45,[[["self"]],["eventtype"]]],[11,"clone","tisuos::sync","",49,[[["self"]],["mutexstate"]]],[11,"clone","tisuos::filesystem::fat32","",50,[[["self"]],["fatinfo"]]],[11,"clone","","",52,[[["self"]],["fatitem"]]],[11,"clone","","",53,[[["self"]],["self"]]],[11,"clone","","",56,[[["self"]],["attribute"]]],[11,"clone","","",54,[[["self"]],["bpb"]]],[11,"clone","","",55,[[["self"]],["extend"]]],[11,"clone","tisuos::filesystem::elf","",58,[[["self"]],["sectionheader"]]],[11,"clone","","",59,[[["self"]],["programheader"]]],[11,"clone","tisuos::filesystem::image::bmp","",64,[[["self"]],["compresstype"]]],[11,"clone","tisuos::filesystem::file","",69,[[["self"]],["self"]]],[11,"clone","tisuos::desktop::controll::style::style","",85,[[["self"]],["colorstyle"]]],[11,"alloc","tisuos::memory::global_allocator","",87,[[["layout"],["self"]]]],[11,"dealloc","","",87,[[["layout"],["self"]]]],[11,"new","tisuos::graphic::element","",74,[[["u32"]],["self"]]],[11,"fill","","",74,[[["pixel"],["self"]]]],[11,"resize","","",74,[[["self"],["u32"]]]]],"p":[[3,"Uart"],[3,"Environment"],[4,"Register"],[3,"Memory"],[3,"Page"],[4,"PageBit"],[3,"MemoryList"],[3,"SATP"],[3,"PTE"],[3,"PageTable"],[4,"PageBit"],[3,"Block"],[3,"Process"],[4,"ProcessState"],[3,"Queue"],[3,"Descriptor"],[3,"Request"],[3,"UsedElem"],[3,"Used"],[3,"Available"],[3,"Header"],[3,"Data"],[3,"Status"],[4,"DeviceType"],[4,"Offset"],[4,"StatusField"],[3,"BlockDevice"],[3,"ResourceFlush"],[3,"ControllHeader"],[3,"Scanout"],[3,"Create2D"],[3,"TransferToHost2d"],[3,"AttachBacking"],[3,"MemEntry"],[3,"GPU"],[3,"Rect"],[3,"Pixel"],[4,"PixelFormat"],[4,"ControllType"],[3,"InputABSInfo"],[3,"InputDevids"],[3,"InputConfig"],[3,"InputEvent"],[3,"InputDevice"],[19,"T"],[4,"EventType"],[3,"Buffer"],[3,"MultiMutex"],[3,"Mutex"],[4,"MutexState"],[3,"FATInfo"],[3,"FATManger"],[3,"FATItem"],[3,"FATShortDirItem"],[3,"BPB"],[3,"Extend"],[4,"Attribute"],[3,"ELF"],[3,"SectionHeader"],[3,"ProgramHeader"],[4,"PType"],[4,"Etype"],[4,"Machine"],[3,"BMP"],[4,"CompressType"],[3,"Image"],[4,"Format"],[3,"FileTree"],[3,"TreeItem"],[3,"File"],[4,"OpenFlag"],[3,"Shell"],[3,"Input"],[8,"ElemTranform"],[3,"Element"],[8,"Draw"],[8,"Circle"],[3,"Desktop"],[3,"Bounds"],[3,"Terminal"],[3,"HeadBar"],[3,"Dock"],[3,"Window"],[3,"Button"],[3,"Style"],[4,"ColorStyle"],[8,"Transform"],[3,"OSGlobalAlloc"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);
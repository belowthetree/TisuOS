initSidebarItems({"enum":[["ProcessState","ProcessState 进程目前分为三种状态：Waiting、Sleeping、Running 每个核心只有一个 Running 的进程，只有 Waiting 的进程能够被调度 Sleeping 的进程除非被唤醒，否则永远沉睡"]],"fn":[["add_process_machine","添加进程到调度队列"],["create_and_add",""],["create_process","对外功能接口，内核权限下可用"],["delete_current_process","删除当前核心正在运行的进程，根据 hartid 和 state 判断"],["fadai_process","发呆进程，什么也不做"],["init",""],["make_syscall",""],["process_exit",""],["save_current","保存当前进程的环境，根据 hartid、ProcessState 查找"],["schedule","进程调度 采用轮换制分时，仅供机器模式使用"],["start_init_process","机器模式（中断）调用部分，严禁用户、内核权限下调用"],["switch_kernel_process",""],["switch_to_next","切换下一个进程，进程必须为 Waiting 状态，会记录当前执行的 hartid 如果没有其它等待进程，会执行原来的进程"],["switch_user_process",""],["wake_up","唤醒进程 从 Sleeping 进入 Waiting 状态，仅供机器模式使用"]],"static":[["HEAP_SIZE",""],["PID_CNT",""],["PROCESS_LIST",""],["PROCESS_LIST_LOCK",""],["PROCESS_NUM_MAX",""],["STACK_PAGE_NUM",""],["TMP_ENV",""]],"struct":[["Process","进程信息结构体 保存环境、栈堆信息（预计增加唤醒时间、优先级） pages 属于进程占用的物理页"]]});
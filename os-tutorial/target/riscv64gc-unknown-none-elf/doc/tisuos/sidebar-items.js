initSidebarItems({"fn":[["abort",""],["eh_personality",""],["kernel_init",""],["kernel_start",""],["panic",""],["test_disk",""],["test_global_allocator",""]],"macro":[["print",""],["println",""]],"mod":[["cpu",""],["desktop","桌面 桌面可视化，开发中"],["filesystem","文件系统 目前只实现了 FAT32 的读取和执行"],["graphic","图形接口 基于 GPU 接口实现，待完善"],["interact","交互 简单的命令交互，便于调试"],["interrupt","中断"],["libs","工具库"],["memory","内存管理 内存管理基于页表实现 * page 是基础，将内存划分为页 * global_allocator 是堆分配 * page_table 负责页表映射 * user_allocator 是一种链式堆内存管理，分配给用户的堆内存用这个管理"],["plic","PLIC 管理时间中断以及外部设备中断，这里只负责 1 ~ 10 的外部中断 外部设备（包括块设备、uart等）通过 plic 控制 接收中断（handler）->获取中断来源针脚（claim）->通知处理完毕（complete） 2020年12月 zg"],["process","进程管理 管理进程，每一个核心进程队列的首元素默认为正在执行的进程 进程的调度按顺序进行，暂未添加优先级等 2020年12月12日 zg"],["sync","同步锁 同步锁，用于磁盘和进程 2020年11月 zg"],["uart","uart.rs UART 可以直接传输用户的输入输出 作为前期输出调试的主要手段，必须优先实现"],["virtio","虚拟 IO 设备 包括块设备、键盘、鼠标、GPU 等设备的控制 2020年11月 zg"]]});
initSidebarItems({"fn":[["align","将某个数向上取 2^n"],["alloc_error",""],["alloc_kernel","alloc kernel 在内核页表申请内存，会自动清空内存"],["alloc_user","alloc user 在用户页表申请内存，同上"],["free_kernel",""],["free_user",""],["init","初始化"]],"static":[["GA",""],["KERNEL_HEAP_NUM_PAGE",""],["KERNEL_HEAP_START",""],["KERNEL_MEMORY",""],["MEMORY_BLOCK_A_LITTLE_BIG",""],["MEMORY_BLOCK_A_TOO_BIG",""],["USER_MEMORY",""]],"struct":[["Memory","Memory 内存管理中最重要的结构 将申请的页表分割成 2 的幂次大小，记录数量和起始地址 每个结构体以链表的形式连接，根据分割粒度的大小排序方便查找 每个颗粒的分配情况通过位图记录，即一位一个颗粒，已用的标记为 1 search idx 是辅助搜索的位点，具体可以查看 alloc 和 free 的逻辑 Page 记录当前管理内存的属性"],["OSGlobalAlloc","容器内存管理 实现 RUST 容器的内存分配 trait 所有内存在内核部分分配"]]});